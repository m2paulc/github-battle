{"version":3,"file":"src_components_Card_js-src_components_Tooltip_js-src_utils_api_js.main.js","mappings":"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","sources":["webpack://github-battle/./src/components/Card.js","webpack://github-battle/./src/components/Hover.js","webpack://github-battle/./src/components/Tooltip.js","webpack://github-battle/./src/utils/api.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeConsumer } from '../context/theme';\r\n\r\nexport default function Card({ header, subheader, avatar, href, name, children }) {\r\n  return (\r\n    <ThemeConsumer>\r\n      {({ theme }) => (\r\n        <div className={`card bg-${theme}`}>\r\n          <h4 className=\"header-lg center-text\">\r\n            {header}\r\n          </h4>\r\n          <img\r\n            className=\"avatar\"\r\n            src={avatar}\r\n            alt={`Avatar for ${name}`} />\r\n          {subheader && (\r\n            <h4 className=\"center-text margin-bottom-md\">\r\n              {subheader}\r\n            </h4>\r\n          )}\r\n          <h2 className=\"center-text\">\r\n            <a className=\"link\" href={href}>\r\n              {name}\r\n            </a>\r\n          </h2>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </ThemeConsumer>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n  subheader: PropTypes.string,\r\n  avatar: PropTypes.string.isRequired,\r\n  href: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired\r\n};","import React, { Component } from 'react';\r\n\r\nexport default class Hover extends Component {\r\n  state = {\r\n    hovering: false\r\n  };\r\n\r\n  mouseOver = () => {\r\n    this.setState({\r\n      hovering: true\r\n    });\r\n  };\r\n  mouseOut = () => {\r\n    this.setState({\r\n      hovering: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div onMouseOver={this.mouseOver} onMouseOut={this.mouseOut}>\r\n        {this.props.children(this.state.hovering)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n// import withHover from './withHover';\r\nimport Hover from './Hover';\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n  },\r\n  tooltip: {\r\n    position: 'absolute',\r\n    width: '160px',\r\n    left: '50%',\r\n    bottom: '100%',\r\n    boxSizing: 'border-box',\r\n    marginLeft: '-80px',\r\n    marginBottom: '5px',\r\n    padding: '7px',\r\n    borderRadius: '3px',\r\n    backgroundColor: 'hsl(0, 0%, 20%, 0.9)',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontSize: '14px',\r\n  }\r\n};\r\n\r\n/*// functional Component*/\r\nexport default function Tooltip({ text, children }) {\r\n  return (\r\n    <Hover>\r\n      {(hovering) => (\r\n        <div style={styles.container}>\r\n          {hovering === true && <div style={styles.tooltip}>{text}</div>}\r\n          {children}\r\n        </div>\r\n      )}\r\n    </Hover>\r\n  );\r\n}\r\n\r\nTooltip.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction getErrorMessage(message, username) {\r\n  if (message === 'Not Found') {\r\n    return `${username} doesn't exist`;\r\n  }\r\n  return message;\r\n}\r\n\r\n//get user profile from Github to use for Battle component\r\nfunction getProfile(username) {\r\n  return fetch(`https://api.github.com/users/${username}`)\r\n    .then((res) => res.json())\r\n    .then((profile) => {\r\n      if (profile.message) {\r\n        //show error\r\n        throw new Error(getErrorMessage(profile.message, username));\r\n      }\r\n      return profile;\r\n    });\r\n}\r\n\r\nfunction getRepos(username) {\r\n  return fetch(`https://api.github.com/users/${username}/repos`)\r\n    .then((res) => res.json())\r\n    .then((repos) => {\r\n      if (repos.message) {\r\n        throw new Error(getErrorMessage(repos.message, username));\r\n      }\r\n      return repos;\r\n    });\r\n}\r\n\r\nfunction getStarCount(repos) {\r\n  return repos.reduce((count, { stargazers_count }) => count + stargazers_count, 0);\r\n}\r\n\r\nfunction calculateScore(followers, repos) {\r\n  return (followers * 3) + getStarCount(repos);\r\n}\r\n\r\nfunction getUserData(player) {\r\n  return Promise.all([\r\n    getProfile(player),\r\n    getRepos(player)\r\n  ]).then(([profile, repos]) => ({\r\n    profile,\r\n    score: calculateScore(profile.followers, repos)\r\n  }));\r\n}\r\n\r\nfunction sortPlayers(players) {\r\n  return players.sort((a, b) => b.score - a.score);\r\n}\r\n\r\nexport function battle(players) {\r\n  return Promise.all([\r\n    getUserData(players[0]),\r\n    getUserData(players[1])\r\n  ]).then((results) => sortPlayers(results));\r\n}\r\n\r\n// fetch the popular repositories according to the selected Language\r\n// from the github API\r\n// this function receives the selected language\r\nexport function fetchPopularRepo(language) {\r\n  const endpoint = window.encodeURI(`https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`);\r\n\r\n  return fetch(endpoint)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if (!data.items) {\r\n        throw new Error(data.message);\r\n      }\r\n      return data.items;\r\n    });\r\n}"],"names":["React","PropTypes","ThemeConsumer","Card","header","subheader","avatar","href","name","children","theme","propTypes","string","isRequired","Component","Hover","hovering","setState","mouseOver","mouseOut","props","state","styles","container","position","display","tooltip","width","left","bottom","boxSizing","marginLeft","marginBottom","padding","borderRadius","backgroundColor","color","textAlign","fontSize","Tooltip","text","getErrorMessage","message","username","getProfile","fetch","then","res","json","profile","Error","getRepos","repos","getStarCount","reduce","count","stargazers_count","calculateScore","followers","getUserData","player","Promise","all","score","sortPlayers","players","sort","a","b","battle","results","fetchPopularRepo","language","endpoint","window","encodeURI","data","items"],"sourceRoot":""}