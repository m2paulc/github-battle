{"version":3,"file":"src_components_Popular_js.main.js","mappings":"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","sources":["webpack://github-battle/./src/components/Popular.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { fetchPopularRepo } from \"../utils/api\";\r\nimport { FaUser, FaStar, FaCodeBranch, FaExclamationTriangle } from \"react-icons/fa\";\r\nimport Card from \"./Card\";\r\nimport Loading from \"./Loading\";\r\nimport Tooltip from \"./Tooltip\";\r\n\r\n//function Component\r\nfunction LanguagesNav({ selected, onUpdateLanguage }) {\r\n  const programmingLanguages = ['All', 'Javascript', 'Ruby', 'Java', 'Python', 'CSS'];\r\n\r\n  return (\r\n    <ul className=\"flex-center\">\r\n      {programmingLanguages.map((language) => (\r\n        <li key={language}>\r\n          <button\r\n            className=\"btn-clear nav-link\"\r\n            style={language === selected ? { color: 'darkorange' } : null}\r\n            onClick={() => onUpdateLanguage(language)}>{language}</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nLanguagesNav.propTypes = {\r\n  selected: PropTypes.string.isRequired,\r\n  onUpdateLanguage: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction ReposGrid({ repos }) {\r\n  return (\r\n    <ul className=\"grid space-around\">\r\n      {repos.map((repo, index) => {\r\n        const { name, owner, html_url, stargazers_count, forks, open_issues } = repo;\r\n        const { login, avatar_url } = owner;\r\n\r\n        return (\r\n          <li key={html_url}>\r\n            <Card\r\n              header={`#${index + 1}`}\r\n              avatar={avatar_url}\r\n              href={html_url}\r\n              name={login}\r\n            >\r\n              <ul className=\"card-list\">\r\n                <li>\r\n                  <Tooltip text=\"Github username\">\r\n                    <FaUser color='rgb(255, 191, 116)' size={22} />\r\n                    <a href={`https://github.com/${login}`}>{login}</a>\r\n                  </Tooltip>\r\n                </li>\r\n                <li>\r\n                  <FaStar color='rgb(255, 215, 0)' size={22} />\r\n                  {stargazers_count.toLocaleString()} stars\r\n                </li>\r\n                <li>\r\n                  <FaCodeBranch color='rgb(129, 195, 245)' size={22} />\r\n                  {forks.toLocaleString()} forks\r\n                </li>\r\n                <li>\r\n                  <FaExclamationTriangle color='rgb(241, 138, 147)' size={22} />\r\n                  {open_issues.toLocaleString()} open\r\n                </li>\r\n              </ul>\r\n            </Card>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul >\r\n  );\r\n}\r\n\r\nReposGrid.propTypes = {\r\n  repos: PropTypes.array.isRequired\r\n};\r\nexport default class Popular extends React.Component {\r\n  state = {\r\n    selectedLanguage: 'All',\r\n    repos: {},\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateLanguage(this.state.selectedLanguage);\r\n  }\r\n\r\n  updateLanguage = (selectedLanguage) => {\r\n    this.setState({\r\n      selectedLanguage,\r\n      error: null\r\n    });\r\n\r\n    if (!this.state.repos[selectedLanguage]) {\r\n      fetchPopularRepo(selectedLanguage)\r\n        .then((data) => {\r\n          this.setState(({ repos }) => ({\r\n            repos: {\r\n              ...repos,\r\n              [selectedLanguage]: data\r\n            }\r\n          }));\r\n        })\r\n        .catch(() => {\r\n          console.error('Error fetching Repos: ', error);\r\n          this.setState({\r\n            error: 'There was an error fetching the repositories'\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  isLoading = () => {\r\n    const { selectedLanguage, repos, error } = this.state;\r\n    return !repos[selectedLanguage] && error === null;\r\n  };\r\n\r\n  render() {\r\n    const { selectedLanguage, repos, error } = this.state;\r\n    return (\r\n      <>\r\n        <LanguagesNav\r\n          selected={selectedLanguage}\r\n          onUpdateLanguage={this.updateLanguage}\r\n        />\r\n        {this.isLoading() && <Loading text='Fetching Repos' />}\r\n        {error && <p className=\"center-text error\">error</p>}\r\n        {repos[selectedLanguage] && <ReposGrid repos={repos[selectedLanguage]} />}\r\n      </>\r\n    );\r\n  }\r\n}"],"names":["React","PropTypes","fetchPopularRepo","FaUser","FaStar","FaCodeBranch","FaExclamationTriangle","Card","Loading","Tooltip","LanguagesNav","selected","onUpdateLanguage","programmingLanguages","map","language","color","propTypes","string","isRequired","func","ReposGrid","repos","repo","index","name","owner","html_url","stargazers_count","forks","open_issues","login","avatar_url","toLocaleString","array","Popular","selectedLanguage","error","setState","state","then","data","console","updateLanguage","isLoading","Component"],"sourceRoot":""}